version: '3.8'

services:
  # PostgreSQL Database with pgvector
  database:
    image: pgvector/pgvector:pg15
    container_name: search-mind-db
    environment:
      POSTGRES_DB: search_mind
      POSTGRES_USER: search_mind_user
      POSTGRES_PASSWORD: search_mind_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - search-mind-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U search_mind_user -d search_mind"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Ollama Service
  ollama:
    image: ollama/ollama:latest
    container_name: search-mind-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - search-mind-network
    environment:
      - OLLAMA_ORIGINS=*
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # Backend Service
  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    container_name: search-mind-backend
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://search_mind_user:search_mind_password@database:5432/search_mind
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_CHAT_MODEL=gemma2:2b
      - OLLAMA_EMBEDDING_MODEL=nomic-embed-text
      - LOG_LEVEL=info
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - search-mind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/agent/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    container_name: search-mind-frontend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - search-mind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: search-mind-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - search-mind-network
    restart: unless-stopped
    profiles:
      - production

networks:
  search-mind-network:
    driver: bridge
    name: search-mind-network

volumes:
  postgres_data:
    name: search-mind-postgres-data
  ollama_data:
    name: search-mind-ollama-data